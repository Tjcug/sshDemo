<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-2.5.xsd " >

    <!--定义可以通过注解的形式扫描包-->
    <context:component-scan base-package="com.basic"/>

    <!--Springboot 和Hibernate整合-->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${driverClassName}">
        </property>
        <property name="url" value="${url}">
        </property>
        <property name="username" value="${username}">
        </property>
        <property name="password" value="${password}">
        </property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

        <property name="mappingLocations">
            <list>
                <!--<value>classpath:hibernateconf/TAssistantanswers.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TAssistantquestions.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TDiscuss.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TDiscusslikes.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TOrder.hbm.xml</value>-->
                <!--<value>classpath:hibernateconf/TReplay.hbm.xml</value>-->
                <value>classpath:hibernateconf/TUser.hbm.xml</value>
                <!--<value>classpath:hibernateconf/Administrator.hbm.xml</value>-->
            </list>
        </property>

        <property name="configLocation" value="classpath:hibernate.cfg.xml">

        </property>
        <property name="dataSource" ref="dataSource">
        </property>

    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>

    <tx:annotation-driven transaction-manager="transactionManager" />


    <!--定义Spring拦截器-->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 &ndash;&gt;-->
        <!--&lt;!&ndash;<bean class="com.host.app.web.interceptor.AllInterceptor"/>&ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/manage*/**"/>-->
            <!--&lt;!&ndash; 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 &ndash;&gt;-->
            <!--&lt;!&ndash;<bean class="com.tour.interceptor.AdminSecurityInterceptor"/>&ndash;&gt;-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <!-- 加载配置文件，支持注解的方法 -->
    <bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <array>
            </array>
        </property>
    </bean>

    <!-- 加载配置文件，支持xml的方式-->
    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath:conn.properties</value>
            </array>
        </property>
    </bean>

    <!-- freemarker的配置 -->
    <bean id="freemarkerConfigurer"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/templates" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">10</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="number_format">#.##</prop>
            </props>
        </property>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="contentType" value="text/html; charset=UTF-8"/>
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="requestContextAttribute" value="request"/>
    </bean>

    <!--jsp ViewResolver的配置-->
    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView">-->
        <!--<property name="prefix" value="/WEB-INF/Jsps"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!--配置静态资源的访问-->
    <mvc:annotation-driven />
    <mvc:resources mapping="/images/**" location="/static/images/" />
    <mvc:resources mapping="/js/**" location="/static/js/" />
    <mvc:resources mapping="/css/**" location="/static/css/" />
</beans>
